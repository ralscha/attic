<project name="jsfstarterapp" xmlns:ivy="antlib:org.apache.ivy.ant" default="jetty">

  <property file="${user.home}/build.properties" /> 
  <property file="${basedir}/build.properties" />

  <property name="web.dir" value="${basedir}/web" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="webinf.lib.dir" value="${web.dir}/WEB-INF/lib" />
	<property name="classes.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="src.dir" value="${basedir}/src" />

	<path id="compile.classpath">
		<fileset dir="${build.dir}/jetty/lib">
			<include name="servlet-api*.jar" />			
      <include name="mail*.jar" />
		</fileset>
		<fileset dir="${webinf.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="liquibase.classpath">
		<path location="${jdbc.driver.path}" />
    <fileset dir="${webinf.lib.dir}">
      <include name="*.jar" />
    </fileset>	
		<pathelement location="${classes.dir}" />         
	</path>

  <taskdef name="eclipseClasspath" classname="ch.ralscha.task.EclipseClasspathTask">
    <classpath>
      <pathelement location="${build.dir}/lib/buildtools.jar" />          
    </classpath>
  </taskdef>    

	<target name="install.ivy">
	  <mkdir dir="${build.dir}/lib"/>
	  <echo message="installing ivy..."/>
	  <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.revision}/ivy-${ivy.revision}.jar" 
	       dest="${build.dir}/lib/ivy-${ivy.revision}.jar" usetimestamp="true"/>

	  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
	    <classpath>
	  	  <pathelement location="${build.dir}/lib/ivy-${ivy.revision}.jar" />         
	  	</classpath>
	  </taskdef>
	</target>

	<target name="clean" description="delete all compiled artifacts">
    <delete dir="${classes.dir}" />
  </target>
	
	<target name="compile" description="compile java source">
		<mkdir dir="${classes.dir}" />

		<javac srcdir="${src.dir}" 
			     destdir="${classes.dir}" 
			     deprecation="true" 
			     optimize="true" 
			     debug="false" 
			     includeAntRuntime="no" 
			     source="1.6" 
			     target="1.6">
			<classpath refid="compile.classpath" />
		</javac>

		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>

	</target>

	
  <target name="war" depends="compile">
		<jar compress="yes" jarfile="${build.dir}/jsfstarterapp.war" basedir="${web.dir}" /> 
	</target>
		
	<target name="jetty" depends="compile" description="run jetty">
    <path id="jetty.classpath">
      <fileset dir="${build.dir}/jetty/lib" includes="*.jar"/>
      <path location="${jdbc.driver.path}" />
    </path>

    <java classname="org.eclipse.jetty.xml.XmlConfiguration" fork="yes">
      <arg file="${build.dir}/jetty/jetty.xml"/>
      <classpath refid="jetty.classpath"/>
    </java>
  </target>

	<target name="clean.lib">
		<delete failonerror="false">
		  <fileset dir="${webinf.lib.dir}" includes="*.jar"/>		
	  	<fileset dir="${build.dir}/jetty/lib" includes="*.jar"/>		
    </delete>
		
		<mkdir dir="${webinf.lib.dir}" />		
		<mkdir dir="${build.dir}/jetty/lib" />
	</target>

  <target name="resolve" depends="install.ivy,clean.lib" description="resolve libraries with ivy">
    <ivy:settings file="${basedir}/ivysettings.xml" />
    <ivy:retrieve />

    <move todir="${build.dir}/jetty/lib">
      <fileset dir="${basedir}/lib">
        <include name="jetty*.jar" />
        <include name="servlet*.jar" />
        <include name="jsp*.jar" />
        <include name="core*.jar" />
        <include name="mail*.jar" />
        <include name="activemq*.jar" />
        <include name="geronimo*.jar" />
      </fileset>
    </move>  

    <move todir="${webinf.lib.dir}">
      <fileset dir="${basedir}/lib">
        <include name="*.jar" />
      </fileset>
    </move> 

    <delete dir="${basedir}/lib" />
    
    <delete file="${basedir}/.classpath"/>
    
    <eclipseClasspath templateFile="${build.dir}/classpath.tmpl" destFile="${basedir}/.classpath" 
      removeFilePart="${basedir}/">
      <classpath refid="compile.classpath" />
    </eclipseClasspath>

  </target>

	
	<target name="create.db.changelog">
		<input addproperty="changelogFileName" message="Changelog Filename: " defaultvalue="changelog_1.xml"/>
		<available file="${src.dir}/db/${changelogFileName}" property="changelogFileExists"/>    
		<fail if="changelogFileExists" message="Changelog File already exists"/>
		
		<taskdef resource="liquibasetasks.properties" classpathref="liquibase.classpath" />  
 
	  <mkdir dir="${src.dir}/db"/>
	
    <diffDatabaseToChangeLog
            driver="${hibernate.connection.driver_class}"
            url="${hibernate.connection.url}"
            username="${hibernate.connection.username}"
            password="${hibernate.connection.password}"
            baseUrl="hibernate:hibernate.cfg.xml"	 
            outputFile="${src.dir}/db/${changelogFileName}"
            classpathref="liquibase.classpath">
    </diffDatabaseToChangeLog>
		
	</target>

</project>