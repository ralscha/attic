/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Wed Jul 09 04:52:21 CEST 2008.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (User.as).
 */

package org.jboss.seam.example.booking {

    import flash.events.EventDispatcher;
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;
    import org.granite.tide.IEntity;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class UserBase implements IExternalizable {

        protected var _em:IEntityManager = null;

        private var __laziness:String = null;

        private var _name:String;
        private var _password:String;
        private var _username:String;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is User) || (property as User).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        [Transient]
        public function meta_getEntityManager():IEntityManager {
            return _em;
        }
        public function meta_setEntityManager(em:IEntityManager):void {
            _em = em;
        }

        public function meta_mergeVersion(entity:IEntity):void {
            _username = UserBase(entity).username;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        public function set password(value:String):void {
            _password = value;
        }
        public function get password():String {
            return _password;
        }

        public function set username(value:String):void {
            _username = value;
        }
        public function get username():String {
            return _username;
        }

        public function set uid(value:String):void {
            // noop...
        }
        public function get uid():String {
            if (!_username)
                return "org.jboss.seam.example.booking.User";
            return "org.jboss.seam.example.booking.User:" + String(_username);
        }

        public function readExternal(input:IDataInput):void {
            __laziness = input.readObject() as String;
            if (meta::isInitialized()) {
                _name = input.readObject() as String;
                _password = input.readObject() as String;
                _username = input.readObject() as String;
            }
            else {
                _username = input.readObject() as String;
            }
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(__laziness);
            if (meta::isInitialized()) {
                if (_name is IPropertyHolder)
                    output.writeObject(IPropertyHolder(_name).object);
                else
                    output.writeObject(_name);
                if (_password is IPropertyHolder)
                    output.writeObject(IPropertyHolder(_password).object);
                else
                    output.writeObject(_password);
                if (_username is IPropertyHolder)
                    output.writeObject(IPropertyHolder(_username).object);
                else
                    output.writeObject(_username);
            }
            else {
                output.writeObject(_username);
            }
        }
    }
}
