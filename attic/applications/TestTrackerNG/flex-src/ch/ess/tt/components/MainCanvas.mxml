<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:principalComponents="ch.ess.tt.components.principal.*"
    xmlns:testComponents="ch.ess.tt.components.test.*"
    minWidth="1000"
    minHeight="680"    
    width="100%"
    height="100%"
    backgroundColor="#FFFFFF"
    creationComplete="handleCreationComplete()">

  <mx:Script>
  <![CDATA[
    import mx.events.IndexChangedEvent;
    import mx.core.Container;
    import ch.ess.tt.control.EventNames;
    import ch.ess.tt.util.CairngormUtils;
    import ch.ess.tt.model.ModelLocator;
  
    [Bindable]
    private var model:ModelLocator = ModelLocator.getInstance();
  
    private function logout():void {
      CairngormUtils.dispatchEvent(EventNames.LOGOUT);
    }
      
    private function handleCreationComplete():void {
      //test
      CairngormUtils.dispatchEvent(EventNames.LIST_TEST);
    }
    
    private function handleViewStackChange(event:IndexChangedEvent):void {
      if (event.newIndex == 0) {
        CairngormUtils.dispatchEvent(EventNames.LIST_TEST);
      } else if (event.newIndex == 1) {
        CairngormUtils.dispatchEvent(EventNames.LIST_PRINCIPAL);
      }
    }
    
    private function controlViewToShow(appWorkflowState:int):Container {
      if (appWorkflowState == ModelLocator.VIEWING_APP_PRINCIPALS) {
        return principalCanvas;
      } else if (appWorkflowState == ModelLocator.VIEWING_APP_TEST) {
        return testCanvas;
      }      
      return testCanvas;
    }      
    
  ]]>
  </mx:Script>
  
  <mx:ApplicationControlBar id="appBar" left="20" top="20" right="20">
    <mx:Label text="Torch" fontSize="18" fontWeight="bold" color="white"  id="label1"/>
    <mx:Spacer width="40" id="spacer2"/>
    
    <mx:LinkBar dataProvider="{objectView}" id="linkBar"/>
    <mx:Spacer width="100%" id="spacer1"/>
    <mx:Button label="Abmelden" click="logout()"  id="logoutButton"/>
  </mx:ApplicationControlBar>
  
  <mx:ViewStack id="objectView" top="80" bottom="30" right="20" left="20" 
    selectedChild="{controlViewToShow(model.appWorkflowState)}" change="handleViewStackChange(event)">
    <testComponents:TestCanvas id="testCanvas" />
    <principalComponents:PrincipalCanvas id="principalCanvas" />
  </mx:ViewStack>
  

</mx:Canvas>