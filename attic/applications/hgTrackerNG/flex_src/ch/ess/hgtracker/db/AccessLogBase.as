/**
 * Generated by Gas3 v1.0.0 (Granite Data Services) on Mon Jan 21 05:58:50 CET 2008.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT WILL BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (AccessLog.as).
 */

package ch.ess.hgtracker.db {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class AccessLogBase implements IExternalizable {

        private var __laziness:String = null;

        private var _club:Club;
        private var _id:Number;
        private var _logIn:Date;
        private var _logOut:Date;
        private var _sessionId:String;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is AccessLog) || (property as AccessLog).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set club(value:Club):void {
            _club = value;
        }
        public function get club():Club {
            return _club;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set logIn(value:Date):void {
            _logIn = value;
        }
        public function get logIn():Date {
            return _logIn;
        }

        public function set logOut(value:Date):void {
            _logOut = value;
        }
        public function get logOut():Date {
            return _logOut;
        }

        public function set sessionId(value:String):void {
            _sessionId = value;
        }
        public function get sessionId():String {
            return _sessionId;
        }

        public function readExternal(input:IDataInput):void {
            __laziness = input.readObject() as String;
            if (meta::isInitialized()) {
                _club = input.readObject() as Club;
                _id = input.readObject() as Number;
                _logIn = input.readObject() as Date;
                _logOut = input.readObject() as Date;
                _sessionId = input.readObject() as String;
            }
            else {
                _id = input.readObject() as Number;
            }
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(__laziness);
            if (meta::isInitialized()) {
                output.writeObject(_club);
                output.writeObject(_id);
                output.writeObject(_logIn);
                output.writeObject(_logOut);
                output.writeObject(_sessionId);
            }
            else {
                output.writeObject(_id);
            }
        }
    }
}