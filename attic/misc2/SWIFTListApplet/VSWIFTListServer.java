/**
* VSWIFTListServer is the virtual class of SWIFTListServer.
* <p>
* @version 1.0.0
* @author Generated by the ObjectSpace Voyager vcc utility.
*/

public class VSWIFTListServer extends COM.objectspace.voyager.VObject
  {
  private static final COM.objectspace.voyager.Token __classname = new COM.objectspace.voyager.Token( "SWIFTListServer" );
  private static final COM.objectspace.voyager.Token __class0 = new COM.objectspace.voyager.Token( "<init>()V" );
  private static final COM.objectspace.voyager.Token __class1 = new COM.objectspace.voyager.Token( "main([Ljava.lang.String;)V" );
  private static final COM.objectspace.voyager.Token __instance0 = new COM.objectspace.voyager.Token( "selectSWIFTMsg(Ljava.lang.String;)Ljava.util.Vector;" );
  private static final COM.objectspace.voyager.Token __instance1 = new COM.objectspace.voyager.Token( "selectSWIFTHeaders(Ljava.lang.String;Ljava.lang.String;)Ljava.util.Vector;" );
  private static final COM.objectspace.voyager.Token __instance2 = new COM.objectspace.voyager.Token( "init()V" );
  private static final COM.objectspace.voyager.Token __instance3 = new COM.objectspace.voyager.Token( "checkForWarning(Ljava.sql.SQLWarning;)V" );

  static
    {
    __register( new VSWIFTListServer() );
    }

  /**
   * Called to force static registration.
   */
  protected void __register()
    {
    }

  /**
   * Construct a VSWIFTListServer that is not associated with an object.
   * This function is used internally by Voyager and should not
   * be invoked by user code. Any attempt to send a message to a
   * reference created using this default constructor will cause a
   * NullPointerException to be thrown.
   */
  public VSWIFTListServer()
    {
    }

  public String getOriginalClassName()
    {
    return "SWIFTListServer";
    }

  public boolean originalIsInterface()
    {
    return false;
    }

  /**
   * Construct a VSWIFTListServer and connect it to the specified object.
   * @param reference A reference to the object to connect to.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public VSWIFTListServer( COM.objectspace.voyager.space.VSubspace reference ) throws COM.objectspace.voyager.VoyagerException
    {
    __connectTo( reference );
    }

  /**
   * @param __address The address of the program where the instantiation should occur.
   * @param __timeout The timeout value in milliseconds.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public VSWIFTListServer( java.lang.String __address, long __timeout ) throws COM.objectspace.voyager.VoyagerException
    {
    COM.objectspace.voyager.Messenger __messenger = __newConstructorDefaultMessenger();
    __constructor( __address, __classname, __messenger, __class0, __timeout );
    }

  /**
   * @param __address The address of the program where the instantiation should occur.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public VSWIFTListServer( java.lang.String __address ) throws COM.objectspace.voyager.VoyagerException
    {
    this( __address, __DEFAULT_TIMEOUT );
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method.
   * @param __address The address of the program that contains the class.
   * @param __timeout The timeout valie in milliseconds.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public static COM.objectspace.voyager.Result main( java.lang.String[] args, COM.objectspace.voyager.Messenger __messenger, java.lang.String __address, long __timeout ) throws COM.objectspace.voyager.VoyagerException
    {
    __messenger.writeObject( args );
    return __staticMethod( __address, __classname, __messenger, __class1, __timeout );
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method.
   * @param __address The address of the program that contains the class.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public static COM.objectspace.voyager.Result main( java.lang.String[] args, COM.objectspace.voyager.Messenger __messenger, java.lang.String __address ) throws COM.objectspace.voyager.VoyagerException
    {
    return main( args, __messenger, __address, __DEFAULT_TIMEOUT );
    }

  /**
   * @param __address The address of the program that contains the class.
   * @param __timeout The timeout valie in milliseconds.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public static void main( java.lang.String[] args, java.lang.String __address, long __timeout ) throws COM.objectspace.voyager.VoyagerException
    {
    main( args, __newStaticDefaultMessenger(), __address, __timeout ).rethrowException();
    }

  /**
   * @param __address The address of the program that contains the class.
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public static void main( java.lang.String[] args, java.lang.String __address ) throws COM.objectspace.voyager.VoyagerException
    {
    main( args, __address, __DEFAULT_TIMEOUT );
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method
   */
  public COM.objectspace.voyager.Result selectSWIFTMsg( java.lang.String TOSN, COM.objectspace.voyager.Messenger __messenger )
    {
    __messenger.writeObject( TOSN );
    return __instanceMethod( __messenger, __instance0 );
    }

  /**
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public java.util.Vector selectSWIFTMsg( java.lang.String TOSN ) throws COM.objectspace.voyager.VoyagerException
    {
    return (java.util.Vector) selectSWIFTMsg( TOSN, __newDefaultMessenger() ).readObject();
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method
   */
  public COM.objectspace.voyager.Result selectSWIFTHeaders( java.lang.String fromDateStr, java.lang.String toDateStr, COM.objectspace.voyager.Messenger __messenger )
    {
    __messenger.writeObject( fromDateStr );
    __messenger.writeObject( toDateStr );
    return __instanceMethod( __messenger, __instance1 );
    }

  /**
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public java.util.Vector selectSWIFTHeaders( java.lang.String fromDateStr, java.lang.String toDateStr ) throws COM.objectspace.voyager.VoyagerException
    {
    return (java.util.Vector) selectSWIFTHeaders( fromDateStr, toDateStr, __newDefaultMessenger() ).readObject();
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method
   */
  public COM.objectspace.voyager.Result init( COM.objectspace.voyager.Messenger __messenger )
    {
    return __instanceMethod( __messenger, __instance2 );
    }

  /**
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public void init() throws COM.objectspace.voyager.VoyagerException
    {
    init( __newDefaultMessenger() ).rethrowException();
    }

  /**
   * @param __messenger The messenger that should be used to invoke the method
   */
  public COM.objectspace.voyager.Result checkForWarning( java.sql.SQLWarning warn, COM.objectspace.voyager.Messenger __messenger )
    {
    __messenger.writeObject( warn );
    return __instanceMethod( __messenger, __instance3 );
    }

  /**
   * @exception COM.objectspace.voyager.VoyagerException A voyager-related exception occurred.
   */
  public void checkForWarning( java.sql.SQLWarning warn ) throws COM.objectspace.voyager.VoyagerException
    {
    checkForWarning( warn, __newDefaultMessenger() ).rethrowException();
    }
  }
