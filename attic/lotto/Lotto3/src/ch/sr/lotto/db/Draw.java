

/*
 * Source generated by VBSF using template2.tmpl.
 */

package ch.sr.lotto.db;

import java.util.*;

import org.apache.commons.lang.builder.*;

import com.objectmatter.bsf.*;

/**
 * Class Draw.
 */
public class Draw {

  /* attributes */
  private Integer no;
  private Integer year;
  private Date drawdate;
  private Integer num1;
  private Integer num2;
  private Integer num3;
  private Integer num4;
  private Integer num5;
  private Integer num6;
  private Integer addnum;
  private String extrajoker;
  private String joker;

  private double nextLottoGainQuota;
  private double nextJokerGainQuota;
  private double nextExtraJokerGainQuota;
  private Date nextDate;

  /** Creates a new Draw */
  public Draw() {
    super();
  }
  /** Creates a new Draw with the supplied values */
  public Draw(
    Integer newno,
    Integer newyear,
    Date newdrawdate,
    Integer newnum1,
    Integer newnum2,
    Integer newnum3,
    Integer newnum4,
    Integer newnum5,
    Integer newnum6,
    Integer newaddnum,
    String newextrajoker,
    String newjoker) {
    no = newno;
    year = newyear;
    drawdate = newdrawdate;
    num1 = newnum1;
    num2 = newnum2;
    num3 = newnum3;
    num4 = newnum4;
    num5 = newnum5;
    num6 = newnum6;
    addnum = newaddnum;
    extrajoker = newextrajoker;
    joker = newjoker;
  }

    
  /** Accessor for attribute no */
  public Integer getNo() {
    return no;
  }

  /** Accessor for attribute year */
  public Integer getYear() {
    return year;
  }

  /** Accessor for attribute drawdate */
  public Date getDrawdate() {
    return drawdate;
  }

  public int[] getNumbers() {
    int[] result = new int[6];
    result[0] = getNum1().intValue();
    result[1] = getNum2().intValue();
    result[2] = getNum3().intValue();
    result[3] = getNum4().intValue();
    result[4] = getNum5().intValue();
    result[5] = getNum6().intValue();

    return result;
  }

  /** Accessor for attribute num1 */
  public Integer getNum1() {
    return num1;
  }

  /** Accessor for attribute num2 */
  public Integer getNum2() {
    return num2;
  }

  /** Accessor for attribute num3 */
  public Integer getNum3() {
    return num3;
  }

  /** Accessor for attribute num4 */
  public Integer getNum4() {
    return num4;
  }

  /** Accessor for attribute num5 */
  public Integer getNum5() {
    return num5;
  }

  /** Accessor for attribute num6 */
  public Integer getNum6() {
    return num6;
  }

  /** Accessor for attribute addnum */
  public Integer getAddnum() {
    return addnum;
  }

    /** Accessor for attribute extrajoker */
    public String getExtrajoker() {
        return extrajoker;
    }
    
  /** Accessor for attribute joker */
  public String getJoker() {
    return joker;
  }

  /** Mutator for attribute no */
  public void setNo(Integer newNo) {
    no = newNo;
  }

  /** Mutator for attribute year */
  public void setYear(Integer newYear) {
    year = newYear;
  }

  /** Mutator for attribute drawdate */
  public void setDrawdate(Date newDrawdate) {
    drawdate = newDrawdate;
  }

  /** Mutator for attribute num1 */
  public void setNum1(Integer newNum1) {
    num1 = newNum1;
  }

  /** Mutator for attribute num2 */
  public void setNum2(Integer newNum2) {
    num2 = newNum2;
  }

  /** Mutator for attribute num3 */
  public void setNum3(Integer newNum3) {
    num3 = newNum3;
  }

  /** Mutator for attribute num4 */
  public void setNum4(Integer newNum4) {
    num4 = newNum4;
  }

  /** Mutator for attribute num5 */
  public void setNum5(Integer newNum5) {
    num5 = newNum5;
  }

  /** Mutator for attribute num6 */
  public void setNum6(Integer newNum6) {
    num6 = newNum6;
  }

  /** Mutator for attribute addnum */
  public void setAddnum(Integer newAddnum) {
    addnum = newAddnum;
  }

    /** Mutator for attribute extrajoker */
    public void setExtrajoker(String newExtrajoker) {
        extrajoker = newExtrajoker;
    }
    
  /** Mutator for attribute joker */
  public void setJoker(String newJoker) {
    joker = newJoker;
  }

  public double getNextJokerGainQuota() {
    return nextJokerGainQuota;
  }

  public double getNextLottoGainQuota() {
    return nextLottoGainQuota;
  }
  
  

  public void setNextJokerGainQuota(double nextJokerGainQuota) {
    this.nextJokerGainQuota = nextJokerGainQuota;
  }

  public void setNextLottoGainQuota(double nextLottoGainQuota) {
    this.nextLottoGainQuota = nextLottoGainQuota;
  }

  public static Draw getLastDraw(Database db) {
    OQuery query = new OQuery();
    query.addOrder("year", OQuery.DESC);
    query.addOrder("no", OQuery.DESC);
    query.setMaxCount(1);

    Draw[] draw = (Draw[]) db.get(Draw.class, query);
    return draw[0];
  }

  public boolean isWednesday() {
    Calendar cal = new GregorianCalendar();
    cal.setTime(getDrawdate());

    if (cal.get(Calendar.DAY_OF_WEEK) == Calendar.WEDNESDAY)
      return true;
    else
      return false;
  }

  public Date getNextDate() {
    return nextDate;
  }

  public void setNextDate(Date nextDate) {
    this.nextDate = nextDate;
  }

  public double getNextExtraJokerGainQuota() {
    return nextExtraJokerGainQuota;
  }

  public void setNextExtraJokerGainQuota(double nextExtraJokerGainQuota) {
    this.nextExtraJokerGainQuota = nextExtraJokerGainQuota;
  }

  public String toString() {
    return ToStringBuilder.reflectionToString(this, ToStringStyle.MULTI_LINE_STYLE);
  }


}