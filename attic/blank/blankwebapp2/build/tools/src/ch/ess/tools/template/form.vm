package ${package}.web.${objectAllLowercaseName};

import java.util.Iterator;
import java.util.Locale;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;

import net.sf.hibernate.Hibernate;
import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;
import net.sf.hibernate.Transaction;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import ${package}.db.${objectName};
import ${package}.resource.AppConfig;
import ch.ess.common.db.HibernateSession;
import ch.ess.common.util.PasswordDigest;
import ch.ess.common.util.Util;
import ch.ess.common.web.PersistentForm;

/** 
  * @struts.form name="${objectLowercaseName}Form"
  */
public class ${objectName}Form extends PersistentForm {


  //todo add column
  /**   
   * @struts.validator type="required"
   * @struts.validator-args arg0resource="login.userName"
   */
  /*
  public void setUserName(String userName) {
    ((User)getPersistent()).setUserName(getTrimmedString(userName));
  }

  public String getUserName() {
    return ((User)getPersistent()).getUserName();
  }
  */
  
        
  protected void fromForm() throws HibernateException {
    
    ${objectName} ${objectLowercaseName} = (${objectName})getPersistent();
    //todo form -> db
  }

  protected void toForm() throws HibernateException {
    
    //todo db -> form
    
    ${objectName} ${objectLowercaseName} = (${objectName})getPersistent();
    
    if (${objectLowercaseName} != null) {
    }
  }

  public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
    //todo validate
    
    ActionErrors errors = super.validate(mapping, request);
    if (errors == null) {
      errors = new ActionErrors();
    }
    
    ${objectName} ${objectLowercaseName} = (${objectName})getPersistent();

    if (errors.isEmpty()) {
      return null;
    } else {
      return errors;
    }
  }

}
