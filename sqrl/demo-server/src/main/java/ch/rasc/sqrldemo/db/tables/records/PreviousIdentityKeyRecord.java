/*
 * This file is generated by jOOQ.
 */
package ch.rasc.sqrldemo.db.tables.records;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.sqrldemo.db.tables.PreviousIdentityKey;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.12.3" },
		comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PreviousIdentityKeyRecord extends
		UpdatableRecordImpl<PreviousIdentityKeyRecord> implements Record2<String, Long> {

	private static final long serialVersionUID = -2119669085;

	/**
	 * Setter for <code>PREVIOUS_IDENTITY_KEY.PREV_IDENTITY_KEY</code>.
	 */
	public void setPrevIdentityKey(String value) {
		set(0, value);
	}

	/**
	 * Getter for <code>PREVIOUS_IDENTITY_KEY.PREV_IDENTITY_KEY</code>.
	 */
	public String getPrevIdentityKey() {
		return (String) get(0);
	}

	/**
	 * Setter for <code>PREVIOUS_IDENTITY_KEY.APP_USER_ID</code>.
	 */
	public void setAppUserId(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>PREVIOUS_IDENTITY_KEY.APP_USER_ID</code>.
	 */
	public Long getAppUserId() {
		return (Long) get(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record2<Long, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	@Override
	public Row2<String, Long> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	@Override
	public Row2<String, Long> valuesRow() {
		return (Row2) super.valuesRow();
	}

	@Override
	public Field<String> field1() {
		return PreviousIdentityKey.PREVIOUS_IDENTITY_KEY.PREV_IDENTITY_KEY;
	}

	@Override
	public Field<Long> field2() {
		return PreviousIdentityKey.PREVIOUS_IDENTITY_KEY.APP_USER_ID;
	}

	@Override
	public String component1() {
		return getPrevIdentityKey();
	}

	@Override
	public Long component2() {
		return getAppUserId();
	}

	@Override
	public String value1() {
		return getPrevIdentityKey();
	}

	@Override
	public Long value2() {
		return getAppUserId();
	}

	@Override
	public PreviousIdentityKeyRecord value1(String value) {
		setPrevIdentityKey(value);
		return this;
	}

	@Override
	public PreviousIdentityKeyRecord value2(Long value) {
		setAppUserId(value);
		return this;
	}

	@Override
	public PreviousIdentityKeyRecord values(String value1, Long value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PreviousIdentityKeyRecord
	 */
	public PreviousIdentityKeyRecord() {
		super(PreviousIdentityKey.PREVIOUS_IDENTITY_KEY);
	}

	/**
	 * Create a detached, initialised PreviousIdentityKeyRecord
	 */
	public PreviousIdentityKeyRecord(String prevIdentityKey, Long appUserId) {
		super(PreviousIdentityKey.PREVIOUS_IDENTITY_KEY);

		set(0, prevIdentityKey);
		set(1, appUserId);
	}
}
