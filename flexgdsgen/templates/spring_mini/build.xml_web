<project name="@projectName@" xmlns:ivy="antlib:org.apache.ivy.ant" default="jetty">

  <property file="${user.home}/build.properties" /> 
  <property file="${basedir}/build.properties" />

  <property name="web.dir" value="${basedir}/web" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="webinf.lib.dir" value="${web.dir}/WEB-INF/lib" />
	<property name="classes.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="flexsrc.dir" value="${basedir}/flex-src" />

	<path id="compile.classpath">
		<fileset dir="${build.dir}/jetty/lib">
			<include name="servlet-api*.jar" />			
		</fileset>
		<fileset dir="${webinf.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

  <taskdef name="eclipseClasspath" classname="ch.ralscha.task.EclipseClasspathTask">
    <classpath>
      <pathelement location="${build.dir}/lib/buildtools.jar" />          
    </classpath>
  </taskdef>    

	<target name="install.ivy">
	  <mkdir dir="${build.dir}/lib"/>
	  <echo message="installing ivy..."/>
	  <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.revision}/ivy-${ivy.revision}.jar" 
	       dest="${build.dir}/lib/ivy-${ivy.revision}.jar" usetimestamp="true"/>

	  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
	    <classpath>
	  	  <pathelement location="${build.dir}/lib/ivy-${ivy.revision}.jar" />         
	  	</classpath>
	  </taskdef>
	</target>


	<target name="clean.java">
		<delete dir="${classes.dir}" />
	</target>

	<target name="clean.flex">
		<delete file="${web.dir}/@projectNameLowerCase@.swf" />
    <delete dir="${web.dir}/assets" />
	</target>

	<target name="clean" depends="clean.java,clean.flex" description="delete all compiled artifacts">
    <delete file="${build.dir}/@projectNameLowerCase@.war" />
  </target>
	
	<target name="compile" depends="compile.java,generate.as3,compile.flex" />

	<target name="check.swf">
	  <condition property="skip.mxmlc">	   
      <uptodate targetfile="${web.dir}/@projectNameLowerCase@.swf">
        <srcfiles dir="${FLEX_HOME}/frameworks" includes="**"/>
      	<srcfiles dir="${build.dir}/flex-lib" includes="*.swc"/>
        <srcfiles dir="${flexsrc.dir}" includes="**"/>
      </uptodate>	        
	  </condition>
	</target>

	<target name="compile.flex" depends="check.swf" unless="skip.mxmlc" description="compile actionscript/mxml source">

		<mxmlc file="${flexsrc.dir}/@projectNameLowerCase@.mxml" 
			     keep-generated-actionscript="false" 
			     output="${web.dir}/@projectNameLowerCase@.swf" 
			     debug="false"
			     optimize="true" 
			     fork="${fork.mxmlc}"
			     accessible="false" 
			     static-link-runtime-shared-libraries="false" 
			     locale="en_US">
      
      <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
      
      <compiler.include-libraries dir="${build.dir}/flex-lib" append="true">
        <include name="granite-essentials.swc" />
      </compiler.include-libraries>

    	<compiler.library-path dir="${build.dir}/flex-lib" append="true">
    		<include name="*.swc" />
    	</compiler.library-path>			
			
      <!-- Standard annotations -->
			<keep-as3-metadata name="Bindable"/>
		  <keep-as3-metadata name="Managed"/>
		  <keep-as3-metadata name="ChangeEvent"/>
		  <keep-as3-metadata name="NonCommittingChangeEvent"/>
		  <keep-as3-metadata name="Transient"/>

    	<!-- Tide annotations -->
		  <keep-as3-metadata name="Id"/>
    	<keep-as3-metadata name="Version"/>
    	<keep-as3-metadata name="Name"/>
    	<keep-as3-metadata name="In"/>
    	<keep-as3-metadata name="Out"/>
    	<keep-as3-metadata name="Observer"/>
    	<keep-as3-metadata name="ManagedEvent"/>
    	<keep-as3-metadata name="Destroy"/>
		  <keep-as3-metadata name="Constraint"/>
		</mxmlc>
    
		<copy todir="${web.dir}">
		  <fileset dir="${FLEX_HOME}/frameworks/rsls" includes="framework*" />
		</copy>

		<copy todir="${web.dir}/assets">
			<fileset dir="${flexsrc.dir}/assets/" includes="**" />
		</copy>    
    
	</target>

	<target name="compile.java" description="compile java source">
		<mkdir dir="${classes.dir}" />

		<javac srcdir="${src.dir}" 
			     destdir="${classes.dir}" 
			     deprecation="true" 
			     optimize="true" 
			     debug="false" 
			     includeAntRuntime="no" 
			     source="1.6" 
			     target="1.6">
			<classpath refid="compile.classpath" />
		</javac>

		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>

	</target>

	
  <target name="war" depends="clean,compile" description="package application into war">
		<jar compress="yes" jarfile="${build.dir}/@projectNameLowerCase@.war" basedir="${web.dir}" /> 
	</target>
	
	<target name="jetty" depends="compile" description="run jetty">
    <path id="jetty.classpath">
      <fileset dir="${build.dir}/jetty/lib" includes="*.jar"/>
    </path>

    <java classname="org.eclipse.jetty.xml.XmlConfiguration" fork="yes">
      <arg file="${build.dir}/jetty/jetty.xml"/>
      <classpath refid="jetty.classpath"/>
    </java>
  </target>

  <target name="generate.as3" depends="compile.java"  description="generate actionscript proxies">     
    <taskdef name="gas3" classname="org.granite.generator.ant.AntJavaAs3Task">
      <classpath>
        <fileset dir="${build.dir}/lib/gas3">
          <include name="*.jar" />
        </fileset>        
        <path refid="compile.classpath"/>         
      </classpath>  
    </taskdef>
        
    <gas3 outputdir="${flexsrc.dir}" tide="true">
      <classpath>
        <pathelement location="${classes.dir}" />         
        <path refid="compile.classpath"/>
      </classpath>    
      <fileset dir="${classes.dir}">
        <include name="@packageEntityDir@/*.class" />
        <include name="@packageServiceDir@/*.class" />
      </fileset>
    </gas3>
  </target>  
  	
	<target name="clean.lib">
		<delete failonerror="false">
		  <fileset dir="${webinf.lib.dir}" includes="*.jar"/>		
		  <fileset dir="${build.dir}/flex-lib" includes="*.swc"/>
	  	<fileset dir="${build.dir}/jetty/lib" includes="*.jar"/>		
		  <fileset dir="${build.dir}/lib/gas3" includes="*.jar"/>  
    </delete>
		
		<mkdir dir="${webinf.lib.dir}" />		
    <mkdir dir="${build.dir}/flex-lib" />
		<mkdir dir="${build.dir}/jetty/lib" />
	  <mkdir dir="${build.dir}/lib/gas3" />
	</target>

  <target name="resolve" depends="install.ivy,clean.lib" description="resolve libraries with ivy">
    <ivy:settings file="${basedir}/ivysettings.xml" />
    <ivy:retrieve />

  	<move todir="${build.dir}/flex-lib">
  		<fileset dir="${basedir}/lib">
  		  <include name="*.swc" />
  		</fileset>
  	</move>
  	
  	<move file="${build.dir}/flex-lib/granite-essentials-swc-${granite.revision}.swc" 
  		    tofile="${build.dir}/flex-lib/granite-essentials.swc" />
  	<move file="${build.dir}/flex-lib/granite-swc-${granite.revision}.swc" 
  		    tofile="${build.dir}/flex-lib/granite.swc" />
  	

    <move todir="${build.dir}/lib/gas3">
      <fileset dir="${basedir}/lib">
        <include name="groovy-all*.jar" />
        <include name="jdo2*.jar" />
        <include name="granite-generator*.jar" />
      </fileset>
    </move>  
    
    <move todir="${build.dir}/jetty/lib">
      <fileset dir="${basedir}/lib">
        <include name="jetty*.jar" />
        <include name="servlet*.jar" />
        <include name="jsp*.jar" />
        <include name="core*.jar" />
      </fileset>
    </move>       
      	
    <move todir="${webinf.lib.dir}">
      <fileset dir="${basedir}/lib">
        <include name="*.jar" />      	
      </fileset>
      </move>  	
    
    <delete dir="${basedir}/lib" />
    
    <delete file="${basedir}/.classpath"/>
    
    <eclipseClasspath templateFile="${build.dir}/classpath.tmpl" destFile="${basedir}/.classpath" 
      removeFilePart="${basedir}/">
      <classpath refid="compile.classpath" />
    </eclipseClasspath>
    
  </target>

</project>