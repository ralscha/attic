<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="100%" height="100%" title="{resourceManager.getString('user','Users')}" creationComplete="init()">

  <mx:Metadata>
    [Name]
  </mx:Metadata>

  <mx:Script>
    <![CDATA[
      import @packageProject@.Constants;
      import @packageProject@.component.StatusEnum;
      import mx.printing.FlexPrintJobScaleType;
      import org.granite.tide.spring.Spring;
      import mx.printing.PrintDataGrid;
      import mx.printing.FlexPrintJob;
      import org.granite.tide.events.TideUIEvent;
      import mx.collections.ArrayCollection;

      [Bindable]
      [In]
      public var usersAC:ArrayCollection;

      private var fileRef:FileReference;

      private function init():void {
        addEventListener(KeyboardEvent.KEY_UP, keyboardHandler, false, 0, true);
      }
      
      private function keyboardHandler(e:KeyboardEvent):void {
        if (e.keyCode == Keyboard.F2) {
          dispatchEvent(new TideUIEvent("newUser"));
        } else if (e.keyCode == Keyboard.F3) {
          dispatchEvent(new TideUIEvent("editUser", userDataGrid.selectedItem));
        } else if (e.keyCode == Keyboard.F4) {
          dispatchEvent(new TideUIEvent("deleteUser", userDataGrid.selectedItem));
        }
      }
      
      [Observer("removedUser")]
      public function removeUser():void {
        userDataGrid.selectedItems = [];        
      }
      
      private function search():void {
        deleteButton.enabled = false;
        userDataGrid.selectedItem = null;
        dispatchEvent(new TideUIEvent("searchUser", searchTI.text));      
      }
      
      
      private function print():void {
        var printJob:FlexPrintJob = new FlexPrintJob();
        if (printJob.start()) {
          var printDataGrid:PrintDataGrid = new PrintDataGrid();
          printDataGrid.visible = false;
          printDataGrid.width = printJob.pageWidth;
          printDataGrid.height = printJob.pageHeight;
          printDataGrid.dataProvider = userDataGrid.dataProvider;
          Spring.getInstance().getContext().application.addChild(printDataGrid);
                    
          printDataGrid.columns = [userNameDGC, firstNameDGC, lastNameDGC];
          
          printDataGrid.validateNow();
          
          printJob.addObject(printDataGrid, FlexPrintJobScaleType.MATCH_WIDTH);
          while(printDataGrid.validNextPage) {
            printDataGrid.nextPage();
            printJob.addObject(printDataGrid, FlexPrintJobScaleType.MATCH_WIDTH);
          }
          
          Spring.getInstance().getContext().application.removeChild(printDataGrid);          
        }
        
        printJob.send();
      }   
      
      private function excelExport():void {
        fileRef = new FileReference();        
        var urlRequest:URLRequest = new URLRequest(Constants.BASE_URL + "userExcelExport.action");        

        dispatchEvent(new TideUIEvent("statusChange", resourceManager.getString("common", "Working"), StatusEnum.WORKING, false, fileRef));


        fileRef.addEventListener(Event.COMPLETE, onComplete);
        fileRef.addEventListener(Event.CANCEL, onComplete);
        fileRef.addEventListener(IOErrorEvent.IO_ERROR, onError);

        fileRef.download(urlRequest, "user.xls");
      }
            
      private function onComplete(e:Event):void {
        fileRef = null;
        dispatchEvent(new TideUIEvent("statusReset"));
      }
      
      private function onError(e:Event):void {
        dispatchEvent(new TideUIEvent("statusChange", e.toString(), StatusEnum.ERROR));
      }
      
    ]]>
  </mx:Script>

  <mx:HBox top="10" left="10">
    <mx:TextInput id="searchTI" enter="search()"/>
    <mx:Button label="{resourceManager.getString('common','Search')}" click="search()"/>
  </mx:HBox>

  <mx:DataGrid id="userDataGrid" bottom="10" top="40" left="10" right="10"
                       toolTip="{resourceManager.getString('common','DataGridEditTooltip')}" dataProvider="{usersAC}" doubleClickEnabled="true"
                       doubleClick="dispatchEvent(new TideUIEvent('editUser', userDataGrid.selectedItem))">
    <mx:columns>
      <mx:DataGridColumn id="userNameDGC" headerText="{resourceManager.getString('user','Username')}" dataField="userName"/>
      <mx:DataGridColumn id="firstNameDGC" headerText="{resourceManager.getString('user','First_Name')}" dataField="firstName"/>
      <mx:DataGridColumn id="lastNameDGC" headerText="{resourceManager.getString('user','Last_Name')}" dataField="name"/>      
    </mx:columns>
  </mx:DataGrid>

  <mx:ControlBar height="40">
    <mx:Button label="{resourceManager.getString('common','New')}" id="newButton" click="dispatchEvent(new TideUIEvent('newUser'))"/>
    <mx:Button label="{resourceManager.getString('common','Delete')}" id="deleteButton" click="dispatchEvent(new TideUIEvent('deleteUser', userDataGrid.selectedItem));" enabled="{userDataGrid.selectedItem}"/>
    <mx:Button label="{resourceManager.getString('common','Print')}" id="printButton" click="print()" />
    <mx:Button label="{resourceManager.getString('common','ExcelExport')}" id="excelExportButton" click="excelExport()"/>
  </mx:ControlBar>

</mx:Panel>
